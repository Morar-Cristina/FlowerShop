        -:    0:Source:C:/Users/user/Desktop/Projects/Flower_Shop/Tests/DomainTest.cpp
        -:    0:Graph:C:\Users\user\Desktop\Projects\Flower_Shop\cmake-build-debug-coverage\CMakeFiles\Flower_Shop.dir\Tests\DomainTest.cpp.gcno
        -:    0:Data:C:\Users\user\Desktop\Projects\Flower_Shop\cmake-build-debug-coverage\CMakeFiles\Flower_Shop.dir\Tests\DomainTest.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by user on 01.05.2022.
        -:    3://
        -:    4:
        -:    5:#include "DomainTest.h"
        -:    6:
function _ZN10DomainTest11test_flowerEv called 1 returned 100% blocks executed 56%
        1:    7:void DomainTest::test_flower() {
        1:    8:    Flower flower1;
        1:    8-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:    9:    assert(flower1.getId() == 0);
        1:    9-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:    9-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:    9-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:    9-block  3
    %%%%%:    9-block  4
       1*:   10:    assert(flower1.getPrice() == 0);
        1:   10-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   10-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   10-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   10-block  3
    %%%%%:   10-block  4
       1*:   11:    assert(flower1.getColor().empty());
        1:   11-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   11-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   11-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   11-block  3
    %%%%%:   11-block  4
       1*:   12:    assert(flower1.getSeason().empty());
        1:   12-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   12-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   12-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   12-block  3
    %%%%%:   12-block  4
       1*:   13:    assert(flower1.getSpecies().empty());
        1:   13-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   13-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   13-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   13-block  3
    %%%%%:   13-block  4
        -:   14:
        1:   15:    flower1.setId(1);
        1:   15-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   16:    flower1.setColor("white");
        1:   16-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   16-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   16-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:   16-block  3
call    9 never executed
    $$$$$:   16-block  4
    $$$$$:   16-block  5
call   10 never executed
    $$$$$:   16-block  6
        1:   17:    flower1.setSeason("spring");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   17-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   17-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:   17-block  2
call    9 never executed
    $$$$$:   17-block  3
    $$$$$:   17-block  4
call   10 never executed
    $$$$$:   17-block  5
        1:   18:    flower1.setSpecies("rose");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   18-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   18-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:   18-block  2
call    9 never executed
    $$$$$:   18-block  3
    $$$$$:   18-block  4
call   10 never executed
    $$$$$:   18-block  5
        1:   19:    flower1.setPrice(4.20);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   20:    assert(flower1.getId() == 1);
        1:   20-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   20-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   20-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   20-block  3
    %%%%%:   20-block  4
       1*:   21:    assert(flower1.getColor() == "white");
        1:   21-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   21-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   21-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   21-block  3
    %%%%%:   21-block  4
       1*:   22:    assert(flower1.getSeason() == "spring");
        1:   22-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   22-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   22-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   22-block  3
    %%%%%:   22-block  4
       1*:   23:    assert(flower1.getSpecies() == "rose");
        1:   23-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   23-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   23-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   23-block  3
    %%%%%:   23-block  4
       1*:   24:    assert(flower1.getPrice() == 4.20);
        1:   24-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   24-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   24-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   24-block  3
    %%%%%:   24-block  4
        -:   25:
        2:   26:    Flower flower2(2, "black", "tulip", "summer", 35.21);
        1:   26-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   26-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   26-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   26-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:   26-block  4
    $$$$$:   26-block  5
    $$$$$:   26-block  6
    $$$$$:   26-block  7
    $$$$$:   26-block  8
    $$$$$:   26-block  9
       1*:   27:    assert(flower2.getId() == 2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   27-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   27-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   27-block  2
    %%%%%:   27-block  3
       1*:   28:    assert(flower2.getColor() == "black");
        1:   28-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   28-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   28-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   28-block  3
    %%%%%:   28-block  4
       1*:   29:    assert(flower2.getSpecies() == "tulip");
        1:   29-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   29-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   29-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   29-block  3
    %%%%%:   29-block  4
       1*:   30:    assert(flower2.getSeason() == "summer");
        1:   30-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   30-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   30-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   30-block  3
    %%%%%:   30-block  4
       1*:   31:    assert(flower2.getPrice() == 35.21);
        1:   31-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   31-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   31-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   31-block  3
    %%%%%:   31-block  4
        -:   32:
        1:   33:    Flower flower3(flower1);
        1:   33-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   34:    assert(flower3 == flower1);
        1:   34-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   34-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   34-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   34-block  3
    %%%%%:   34-block  4
        1:   35:}
        1:   35-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   35-block  1
call    3 never executed
    $$$$$:   35-block  2
call    4 never executed
    $$$$$:   35-block  3
call    5 never executed
        -:   36:
function _ZN10DomainTest9run_testsEv called 1 returned 100% blocks executed 100%
        1:   37:void DomainTest::run_tests() {
        1:   38:    test_flower();
        1:   38-block  0
call    0 returned 1
        1:   39:}
